{"version":3,"file":"static/js/466.f2380acf.chunk.js","mappings":"gMACA,EAAuB,0B,oCC+DvB,EA1DoB,WAClB,IAAMA,GAAWC,EAAAA,EAAAA,MAEXC,GAAWC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASG,KAAnB,IAa5BC,EAA0B,SAAAC,GAC9B,OAAOL,EAASM,MAAK,SAAAC,GAAO,OAAIA,EAAQC,OAASH,CAArB,GAC7B,EAYD,OACE,kBAAMI,SAXW,SAAAC,GACjBA,EAAIC,iBACJ,IAAMC,EAAOF,EAAIG,QAjBC,SAAAC,GAClB,IAAMC,GAAU,UACXD,GAEAV,EAAwBW,EAAWP,MAGtCQ,MAAM,GAAD,OAAID,EAAWP,KAAf,6BAFLV,GAASmB,EAAAA,EAAAA,IAAWF,GAIvB,CASCG,CAAY,CACVV,KAAME,EAAIG,OAAOL,KAAKW,MACtBC,IAAKV,EAAIG,OAAOO,IAAID,QAEtBP,EAAKS,OACN,EAG6BC,UAAWC,EAAvC,WACE,qCAEE,kBACEC,KAAK,OACLhB,KAAK,OAELiB,MAAM,yIACNC,UAAQ,QAGZ,uCAEE,kBACEF,KAAK,MACLhB,KAAK,MAELiB,MAAM,+FACNC,UAAQ,QAIZ,mBAAQF,KAAK,SAAb,2BAGL,EC7DD,EAA8B,iCAA9B,EAA4E,gCAA5E,EAAoH,2BAApH,EAAyJ,6BC6CzJ,EAzCoB,WAClB,IAAMG,GAAc1B,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASG,KAAnB,IAC/ByB,GAAS3B,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAM0B,MAAV,IAC1B9B,GAAWC,EAAAA,EAAAA,MAEjB,GAAoCE,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,QAAV,IAA7CG,EAAR,EAAQA,MAAO0B,EAAf,EAAeA,UAAWC,EAA1B,EAA0BA,OAE1BC,EAAAA,EAAAA,YAAU,WACRjC,GAASkC,EAAAA,EAAAA,MACV,GAAE,CAAClC,IACJ,IAAMmC,EAAiBN,EAAYC,QAAO,SAAArB,GACxC,OAAOA,EAAQC,KAAK0B,cAAcC,SAASP,EAAOM,cACnD,IAMD,OACE,gCACGL,IAAa,cAAGP,UAAWc,EAAd,6BACI,IAAjBjC,EAAMkC,SAAiBR,IAAcC,IACpC,cAAGR,UAAWc,EAAd,mCAEDN,IAAS,cAAGR,UAAWc,EAAd,SAAkCN,KAC5C,eAAIR,UAAWc,EAAf,SACGH,EAAeK,KAAI,YAAwB,IAArBC,EAAoB,EAApBA,GAAInB,EAAgB,EAAhBA,IAAKZ,EAAW,EAAXA,KAC9B,OACE,0BACGA,EADH,KACWY,GACT,mBAAQI,KAAK,SAASgB,QAAS,kBAhBnBC,EAgByCF,OAf/DzC,GAAS4C,EAAAA,EAAAA,IAAcD,IADD,IAAAA,CAgBmB,EAA/B,sBAFOF,EAOZ,QAIR,EC3CD,EAA8B,4B,SCmB9B,EAfe,WACb,IAAMzC,GAAWC,EAAAA,EAAAA,MACXoB,GAAQlB,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAM0B,MAAV,IAK/B,OACE,mBAAON,UAAWM,EAAlB,mCAEE,kBAAOJ,KAAK,OAAOL,MAAOA,EAAOwB,SANpB,SAAC,GAAgB,IAAd9B,EAAa,EAAbA,OAClBf,GAAS8C,EAAAA,EAAAA,GAAU/B,EAAOM,OAC3B,MAOF,ECED,EAfiB,WACf,OACE,+BACE,6BACE,uCACA,SAAC,EAAD,KAEA,sCACA,SAAC,EAAD,KACA,SAAC,EAAD,QAIP,C","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\"};","import contactForm from './ContactForm.module.css';\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(state => state.contacts.items);\n\n  const addContacts = newContactData => {\n    const newContact = {\n      ...newContactData,\n    };\n    if (!checkNewContactPresence(newContact.name)) {\n      dispatch(addContact(newContact));\n    } else {\n      alert(`${newContact.name} is already in contacts!`);\n    }\n  };\n\n  const checkNewContactPresence = contactName => {\n    return contacts.some(contact => contact.name === contactName);\n  };\n\n  const formSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.target;\n    addContacts({\n      name: evt.target.name.value,\n      tel: evt.target.tel.value,\n    });\n    form.reset();\n  };\n\n  return (\n    <form onSubmit={formSubmit} className={contactForm.form}>\n      <label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"tel\"\n          // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\",\"noContacts\":\"ContactList_noContacts__-QuDG\",\"error\":\"ContactList_error__uCB2f\",\"loading\":\"ContactList_loading__QJfkF\"};","import { useDispatch, useSelector } from 'react-redux';\nimport contactList from './ContactList.module.css';\nimport { deleteContact, fetchContacts } from 'redux/contacts/operations';\nimport { useEffect } from 'react';\n\nconst ContactList = () => {\n  const contactData = useSelector(state => state.contacts.items);\n  const filter = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n\n  const { items, isLoading, error } = useSelector(state => state.contacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  const filterContacts = contactData.filter(contact => {\n    return contact.name.toLowerCase().includes(filter.toLowerCase());\n  });\n\n  const onDeleteContact = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  return (\n    <>\n      {isLoading && <p className={contactList.loading}>Loading data...</p>}\n      {items.length === 0 && !isLoading && !error && (\n        <p className={contactList.noContacts}>There are no contacts</p>\n      )}\n      {error && <p className={contactList.error}>{error}</p>}\n      <ol className={contactList.contactList}>\n        {filterContacts.map(({ id, tel, name }) => {\n          return (\n            <li key={id}>\n              {name}: {tel}\n              <button type=\"button\" onClick={() => onDeleteContact(id)}>\n                Delete\n              </button>\n            </li>\n          );\n        })}\n      </ol>\n    </>\n  );\n};\n\nexport default ContactList;\n\n// ContactList.propTypes = {\n//   deleteContact: PropTypes.func,\n// };\n","// extracted by mini-css-extract-plugin\nexport default {\"filterLabel\":\"Filter_filterLabel__+pnW-\"};","import filter from './Filter.module.css';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const value = useSelector(state => state.filter);\n\n  const onChange = ({ target }) => {\n    dispatch(setFilter(target.value));\n  };\n  return (\n    <label className={filter.filterLabel}>\n      Find contacts by name\n      <input type=\"text\" value={value} onChange={onChange} />\n    </label>\n  );\n};\n\nexport default Filter;\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport React from 'react';\n\nconst Contacts = () => {\n  return (\n    <>\n      <main>\n        <h1>Phonebook</h1>\n        <ContactForm />\n\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </main>\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["dispatch","useDispatch","contacts","useSelector","state","items","checkNewContactPresence","contactName","some","contact","name","onSubmit","evt","preventDefault","form","target","newContactData","newContact","alert","addContact","addContacts","value","tel","reset","className","contactForm","type","title","required","contactData","filter","isLoading","error","useEffect","fetchContacts","filterContacts","toLowerCase","includes","contactList","length","map","id","onClick","contactId","deleteContact","onChange","setFilter"],"sourceRoot":""}